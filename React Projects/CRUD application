import React, { useState } from "react";

function App() {
  const [items, setItems] = useState([]);
  const [addItem, setAddItem] = useState("");
  const [editedItem, setEditedItem] = useState("");
  const [editIndex, setEditIndex] = useState(null);

  const handleAddItem = () => {
    if (addItem.trim() !== "") {
      setItems([...items, addItem]);
      setAddItem("");
    }
  };

  const handleEditItem = (index) => {
    setEditIndex(index);
    setEditedItem(items[index]);
  };

  const handleUpdateItem = () => {
    if (editedItem.trim() !== "") {
      const updatedItems = [...items];
      updatedItems[editIndex] = editedItem;
      setItems(updatedItems);
      setEditedItem("");
      setEditIndex(null);
    }
  };

  const handleDeleteItem = (index) => {
    if (window.confirm("Delete this item?")) {
      const updatedItems = items.filter((item, ind, arr) => ind !== index);
      setItems(updatedItems);
      setEditIndex(null);
    }
  };

  return (
    <div className="App">
      <h1>React CRUD App</h1>
      <div>
        <input
          type="text"
          value={addItem}
          onChange={(e) => setAddItem(e.target.value)}
          placeholder="Add a new item"
        />
        <button onClick={handleAddItem}>Add</button>
      </div>
      <ul>
        {items.map((item, index) => (
          <li key={index}>
            {editIndex === index ? (
              <>
                <input
                  type="text"
                  value={editedItem}
                  onChange={(e) => setEditedItem(e.target.value)}
                />
                <button onClick={handleUpdateItem}>Update</button>
                <button onClick={() => handleDeleteItem(index)}>Delete</button>
              </>
            ) : (
              <>
                {item}
                <button onClick={() => handleEditItem(index)}>Edit</button>
                <button onClick={() => handleDeleteItem(index)}>Delete</button>
              </>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
------------------------------------
import { useState } from "react";

export default function App() {
  const [items, setItems] = useState(["hello", "hi"]);
  const [addItem, setAddItem] = useState("");
  const [editItem, setEditItem] = useState("");
  const [editedIndex, setEditedIndex] = useState("");

  const handleChangeAdd = (e) => {
    setAddItem(e.target.value);
  };

  const handleClickAdd = () => {
    setItems([...items, addItem]);
    setAddItem("");
  };

  const handleChangeEdit = (e) => {
    setEditItem(e.target.value);
  };

  const handleClickEdit = (index) => {
    setEditedIndex(index);
  };

  const handleClickDelete = (index) => {
    const temp = items?.filter((val, ind, arr) => index !== ind);
    setItems(temp);
  };

  const handleClickUpdate = () => {
    const temp = [...items];
    temp[editedIndex] = editItem;
    setItems(temp);
    setEditItem("");
    setEditedIndex(null);
  };
  return (
    <div className="App">
      <input type="text" value={addItem} onChange={(e) => handleChangeAdd(e)} />
      <button onClick={handleClickAdd}>Add</button>
      <div>
        <ul>
          {items.map((value, index) => (
            <li key={index}>
              {index === editedIndex ? (
                <>
                  <input
                    type="text"
                    value={editItem}
                    onChange={handleChangeEdit}
                  />
                  <button onClick={handleClickUpdate}>Update</button>
                  <button onClick={() => handleClickDelete(index)}>
                    Delete
                  </button>
                </>
              ) : (
                <>
                  {value}
                  <button onClick={() => handleClickEdit(index)}>Edit</button>
                  <button onClick={() => handleClickDelete(index)}>
                    Delete
                  </button>
                </>
              )}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}
---------------------------------------
Data Validation and error handling:
import { useState } from "react";

export default function App() {
  const [items, setItems] = useState(["hello"]);
  const [addItem, setAddItem] = useState("");
  const [editIndex, setEditIndex] = useState(null);
  const [editItem, setEditItem] = useState("");
  const [error, setError] = useState("");

  const handleChangeAdd = (e) => {
    setAddItem(e.target.value);
  };

  const handleClickAdd = () => {
    if (isInputValid(addItem)) {
      setItems([...items, addItem]);
      setAddItem("");
      setError("");
    }
  };

  const handleClickDelete = (index) => {
    const temp = items.filter((val, ind, arr) => ind !== index);
    setItems(temp);
  };

  const handleClickEdit = (index) => {
    setEditIndex(index);
    setEditItem(items[index]);
  };

  const handleChangeUpdate = (e) => {
    setEditItem(e.target.value);
  };

  const handleClickUpdate = () => {
    if (isInputValid(editItem)) {
      const temp = [...items];
      temp[editIndex] = editItem;
      setItems(temp);
      setEditIndex(null);
      setEditItem("");
      setError("");
    }
  };

  const isInputValid = (input) => {
    if (input.trim() === "") {
      setError("Add your input!!");
      return false;
    }
    if (items.includes(input)) {
      setError("Can't add a duplicate input!!");
      return false;
    }
    setError("");
    return true;
  };

  return (
    <div>
      <input type="text" value={addItem} onChange={handleChangeAdd} />
      <button onClick={handleClickAdd}>Add</button>

      <div>
        <ol>
          {items.map((value, index) => (
            <li key={index}>
              {index === editIndex ? (
                <>
                  <input
                    type="text"
                    value={editItem}
                    onChange={handleChangeUpdate}
                  />
                  <button onClick={handleClickUpdate}>Update</button>
                  <button onClick={() => handleClickDelete(index)}>
                    Delete
                  </button>
                </>
              ) : (
                <>
                  {value}
                  <button onClick={() => handleClickEdit(index)}>Edit</button>
                  <button onClick={() => handleClickDelete(index)}>
                    Delete
                  </button>
                </>
              )}
            </li>
          ))}
        </ol>
      </div>
      <>{error && <div style={{ color: "red" }}>{error}</div>}</>
    </div>
  );
}
---------------------------------------------
Search functionality:
import { useState } from "react";

export default function App() {
  const [items, setItems] = useState(["hello"]);
  const [addItem, setAddItem] = useState("");
  const [editIndex, setEditIndex] = useState(null);
  const [editItem, setEditItem] = useState("");
  const [error, setError] = useState("");
  const [search, setSearch] = useState("");

  const handleChangeAdd = (e) => {
    setAddItem(e.target.value);
  };

  const handleClickAdd = () => {
    if (isInputValid(addItem)) {
      setItems([...items, addItem]);
      setAddItem("");
      setError("");
    }
  };

  const handleClickDelete = (index) => {
    const temp = items.filter((val, ind, arr) => ind !== index);
    setItems(temp);
  };

  const handleClickEdit = (index) => {
    setEditIndex(index);
    setEditItem(items[index]);
  };

  const handleChangeUpdate = (e) => {
    setEditItem(e.target.value);
  };

  const handleClickUpdate = () => {
    if (isInputValid(editItem)) {
      const temp = [...items];
      temp[editIndex] = editItem;
      setItems(temp);
      setEditIndex(null);
      setEditItem("");
      setError("");
    }
  };

  const isInputValid = (input) => {
    if (input.trim() === "") {
      setError("Add your input!!");
      return false;
    }
    if (items.includes(input)) {
      setError("Can't add a duplicate input!!");
      return false;
    }
    setError("");
    return true;
  };

  const handleChangeSearch = (e) => {
    setSearch(e.target.value);
  };

  const filteredItems = items.filter(
    (item) => search !== "" && item.toLowerCase().includes(search.toLowerCase())
  );

  console.log("filteredItems", filteredItems);
  return (
    <div>
      <input
        type="text"
        value={addItem}
        onChange={handleChangeAdd}
        placeholder="Add Task"
      />
      <button onClick={handleClickAdd}>Add</button>

      <input
        type="text"
        placeholder="Search Here"
        value={search}
        onChange={(e) => handleChangeSearch(e)}
      />
      <div>
        <ol>
          {search !== "" &&
            filteredItems?.map((item, index) => (
              <li key={index}>
                {index === editIndex ? (
                  <>
                    <input
                      type="text"
                      value={editItem}
                      onChange={handleChangeUpdate}
                    />
                    <button onClick={handleClickUpdate}>Update</button>
                    <button onClick={() => handleClickDelete(index)}>
                      Delete
                    </button>
                  </>
                ) : (
                  <>
                    {item}
                    <button onClick={() => handleClickEdit(index)}>Edit</button>
                    <button onClick={() => handleClickDelete(index)}>
                      Delete
                    </button>
                  </>
                )}
              </li>
            ))}
          {search === "" &&
            items.map((value, index) => (
              <li key={index}>
                {index === editIndex ? (
                  <>
                    <input
                      type="text"
                      value={editItem}
                      onChange={handleChangeUpdate}
                    />
                    <button onClick={handleClickUpdate}>Update</button>
                    <button onClick={() => handleClickDelete(index)}>
                      Delete
                    </button>
                  </>
                ) : (
                  <>
                    {value}
                    <button onClick={() => handleClickEdit(index)}>Edit</button>
                    <button onClick={() => handleClickDelete(index)}>
                      Delete
                    </button>
                  </>
                )}
              </li>
            ))}
        </ol>
      </div>
      <>{error && <div style={{ color: "red" }}>{error}</div>}</>
    </div>
  );
}
---------------------------
Search functionality:
import { useState } from "react";

export default function App() {
  const [items, setItems] = useState(["hello"]);
  const [addItem, setAddItem] = useState("");
  const [editIndex, setEditIndex] = useState(null);
  const [editItem, setEditItem] = useState("");
  const [error, setError] = useState("");
  const [search, setSearch] = useState("");

  const handleChangeAdd = (e) => {
    setAddItem(e.target.value);
  };

  const handleClickAdd = () => {
    if (isInputValid(addItem)) {
      setItems([...items, addItem]);
      setAddItem("");
      setError("");
    }
  };

  const handleClickDelete = (index) => {
    const temp = items.filter((val, ind, arr) => ind !== index);
    setItems(temp);
  };

  const handleClickEdit = (index) => {
    setEditIndex(index);
    setEditItem(items[index]);
  };

  const handleChangeUpdate = (e) => {
    setEditItem(e.target.value);
  };

  const handleClickUpdate = () => {
    if (isInputValid(editItem)) {
      const temp = [...items];
      temp[editIndex] = editItem;
      setItems(temp);
      setEditIndex(null);
      setEditItem("");
      setError("");
    }
  };

  const isInputValid = (input) => {
    if (input.trim() === "") {
      setError("Add your input!!");
      return false;
    }
    if (items.includes(input)) {
      setError("Can't add a duplicate input!!");
      return false;
    }
    setError("");
    return true;
  };

  const handleChangeSearch = (e) => {
    setSearch(e.target.value);
  };

  const filteredItems = items.filter(
    (item) => search !== "" && item.toLowerCase().includes(search.toLowerCase())
  );

  const temp_list = search === "" ? items : filteredItems;
  return (
    <div>
      <input
        type="text"
        value={addItem}
        onChange={handleChangeAdd}
        placeholder="Add Task"
      />
      <button onClick={handleClickAdd}>Add</button>

      <input
        type="text"
        placeholder="Search Here"
        value={search}
        onChange={(e) => handleChangeSearch(e)}
      />
      <div>
        <ol>
          {temp_list.map((value, index) => (
            <li key={index}>
              {index === editIndex ? (
                <>
                  <input
                    type="text"
                    value={editItem}
                    onChange={handleChangeUpdate}
                  />
                  <button onClick={handleClickUpdate}>Update</button>
                  <button onClick={() => handleClickDelete(index)}>
                    Delete
                  </button>
                </>
              ) : (
                <>
                  {value}
                  <button onClick={() => handleClickEdit(index)}>Edit</button>
                  <button onClick={() => handleClickDelete(index)}>
                    Delete
                  </button>
                </>
              )}
            </li>
          ))}
        </ol>
      </div>
      <>{error && <div style={{ color: "red" }}>{error}</div>}</>
    </div>
  );
}
